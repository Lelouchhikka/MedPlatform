import os
import django
import random
from faker import Faker
from datetime import datetime, timedelta

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'medical_platform.settings')
django.setup()

from django.contrib.auth import get_user_model
from core.models import Doctor, Specialty, Clinic, DoctorSchedule

fake = Faker("ru_RU")
User = get_user_model()

def seed_specialties():
    """–°–æ–∑–¥–∞—ë—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç"""
    specialties = ["–ö–∞—Ä–¥–∏–æ–ª–æ–≥", "–ù–µ–≤—Ä–æ–ª–æ–≥", "–¢–µ—Ä–∞–ø–µ–≤—Ç", "–î–µ—Ä–º–∞—Ç–æ–ª–æ–≥", "–û—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥"]
    specialty_objs = [Specialty.objects.get_or_create(name=name)[0] for name in specialties]
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(specialty_objs)} —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π")
    return specialty_objs

def generate_unique_email():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π email, –∏–∑–±–µ–≥–∞—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π"""
    while True:
        email = fake.unique.email()
        if not User.objects.filter(email=email).exists():
            return email

def generate_unique_clinic_name():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∏–Ω–∏–∫–∏"""
    while True:
        name = fake.company()
        if not Clinic.objects.filter(name=name).exists():
            return name
def generate_unique_license():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –ª–∏—Ü–µ–Ω–∑–∏–∏"""
    while True:
        license_number = str(fake.random_int(min=100000, max=999999))  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 6-–∑–Ω–∞—á–Ω—ã–π –Ω–æ–º–µ—Ä
        if not Doctor.objects.filter(license_number=license_number).exists():
            return license_number

def seed_clinics(count=5):
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–ª–∏–Ω–∏–∫–∏"""
    clinics = []
    for _ in range(count):
        email = generate_unique_email()
        username = f"{email.split('@')[0]}_{random.randint(1000, 9999)}"

        user = User.objects.create_user(
            username=username,
            email=email,
            password="password123",
            role="clinic",
        )
        clinic = Clinic.objects.create(
            user=user,
            name=fake.company(),
            address=fake.address(),
            phone=fake.phone_number(),
            email=fake.email(),
            description=fake.text(max_nb_chars=200)
        )
        clinics.append(clinic)

    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {count} –∫–ª–∏–Ω–∏–∫")
    return clinics



def seed_doctors(n=10):
    specialties = list(Specialty.objects.all())  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
    clinics = list(Clinic.objects.all())  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–ª–∏–Ω–∏–∫–∏
    doctors = []

    for _ in range(n):
        user = User.objects.create_user(
            username=fake.user_name(),
            email=fake.email(),
            password="password123",
            role="doctor"
        )

        doctor = Doctor.objects.create(
            user=user,
            license_number=generate_unique_license(),
            clinic=random.choice(clinics),
            phone=fake.phone_number(),
            rating=round(random.uniform(3.0, 5.0), 1),
        )

        # ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π
        num_specialties = random.randint(1, min(3, len(specialties)))  # –û—Ç 1 –¥–æ 3 —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π
        doctor.specialties.set(random.sample(specialties, num_specialties))

        doctors.append(doctor)

    print(f"‚úÖ {n} –≤—Ä–∞—á–µ–π —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
def seed_schedule():
    print("üìÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –¥–æ–∫—Ç–æ—Ä–æ–≤...")
    doctors = Doctor.objects.all()

    start_date = datetime.today().date()
    end_date = start_date + timedelta(days=30)  # –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –º–µ—Å—è—Ü
    start_time = datetime.strptime("09:00", "%H:%M").time()
    end_time = datetime.strptime("18:00", "%H:%M").time()
    duration = 60  # 1 —á–∞—Å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é

    for doctor in doctors:
        DoctorSchedule.generate_schedule(
            doctor=doctor,
            start_date=start_date,
            end_date=end_date,
            start_time=start_time,
            end_time=end_time,
            duration=duration,  # –£–±—Ä–∞–ª–∏ is_recurring
        )

    print("‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ!")


if __name__ == "__main__":
    seed_specialties()
    seed_clinics(5)
    seed_doctors(10)
    seed_schedule()
